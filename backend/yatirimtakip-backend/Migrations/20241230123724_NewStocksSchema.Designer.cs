// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using yatirimtakip_backend.Data;

#nullable disable

namespace yatirimtakip_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241230123724_NewStocksSchema")]
    partial class NewStocksSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("yatirimtakip_backend.Models.Investment", b =>
                {
                    b.Property<int>("InvestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvestID"));

                    b.Property<int>("StockID")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitAmount")
                        .HasColumnType("integer");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("InvestID");

                    b.HasIndex("StockID");

                    b.HasIndex("UserID");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("yatirimtakip_backend.Models.Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StockID"));

                    b.Property<decimal>("Close")
                        .HasColumnType("money");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("High")
                        .HasColumnType("money");

                    b.Property<decimal>("Low")
                        .HasColumnType("money");

                    b.Property<decimal>("Open")
                        .HasColumnType("money");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Volume")
                        .HasColumnType("double precision");

                    b.HasKey("StockID");

                    b.HasIndex("SName");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("yatirimtakip_backend.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("yatirimtakip_backend.Models.Investment", b =>
                {
                    b.HasOne("yatirimtakip_backend.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yatirimtakip_backend.Models.User", "User")
                        .WithMany("Investments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("User");
                });

            modelBuilder.Entity("yatirimtakip_backend.Models.Stock", b =>
                {
                    b.HasOne("yatirimtakip_backend.Models.Investment", null)
                        .WithMany()
                        .HasForeignKey("SName")
                        .HasPrincipalKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("yatirimtakip_backend.Models.User", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
